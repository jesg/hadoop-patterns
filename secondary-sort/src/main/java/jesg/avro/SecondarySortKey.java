/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package jesg.avro;

@SuppressWarnings("all")
/** Special key that sorts first by station then by timestamp. */
@org.apache.avro.specific.AvroGenerated
public class SecondarySortKey extends
        org.apache.avro.specific.SpecificRecordBase implements
        org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser()
            .parse("{\"type\":\"record\",\"name\":\"SecondarySortKey\",\"namespace\":\"jesg.avro\",\"doc\":\"Special key that sorts first by station then by timestamp.\",\"fields\":[{\"name\":\"station\",\"type\":\"long\"},{\"name\":\"timestamp\",\"type\":\"long\",\"order\":\"descending\"}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private long station;
    private long timestamp;

    /**
     * Default constructor. Note that this does not initialize fields to their
     * default values from the schema. If that is desired then one should use
     * {@link \#newBuilder()}.
     */
    public SecondarySortKey() {
    }

    /**
     * All-args constructor.
     */
    public SecondarySortKey(java.lang.Long station, java.lang.Long timestamp) {
        this.station = station;
        this.timestamp = timestamp;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter. Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
        case 0:
            return station;
        case 1:
            return timestamp;
        default:
            throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader. Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
        case 0:
            station = (java.lang.Long) value$;
            break;
        case 1:
            timestamp = (java.lang.Long) value$;
            break;
        default:
            throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'station' field.
     */
    public java.lang.Long getStation() {
        return station;
    }

    /**
     * Sets the value of the 'station' field.
     * 
     * @param value
     *            the value to set.
     */
    public void setStation(java.lang.Long value) {
        this.station = value;
    }

    /**
     * Gets the value of the 'timestamp' field.
     */
    public java.lang.Long getTimestamp() {
        return timestamp;
    }

    /**
     * Sets the value of the 'timestamp' field.
     * 
     * @param value
     *            the value to set.
     */
    public void setTimestamp(java.lang.Long value) {
        this.timestamp = value;
    }

    /** Creates a new SecondarySortKey RecordBuilder */
    public static jesg.avro.SecondarySortKey.Builder newBuilder() {
        return new jesg.avro.SecondarySortKey.Builder();
    }

    /**
     * Creates a new SecondarySortKey RecordBuilder by copying an existing
     * Builder
     */
    public static jesg.avro.SecondarySortKey.Builder newBuilder(
            jesg.avro.SecondarySortKey.Builder other) {
        return new jesg.avro.SecondarySortKey.Builder(other);
    }

    /**
     * Creates a new SecondarySortKey RecordBuilder by copying an existing
     * SecondarySortKey instance
     */
    public static jesg.avro.SecondarySortKey.Builder newBuilder(
            jesg.avro.SecondarySortKey other) {
        return new jesg.avro.SecondarySortKey.Builder(other);
    }

    /**
     * RecordBuilder for SecondarySortKey instances.
     */
    public static class Builder
            extends
            org.apache.avro.specific.SpecificRecordBuilderBase<SecondarySortKey>
            implements org.apache.avro.data.RecordBuilder<SecondarySortKey> {

        private long station;
        private long timestamp;

        /** Creates a new Builder */
        private Builder() {
            super(jesg.avro.SecondarySortKey.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(jesg.avro.SecondarySortKey.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.station)) {
                this.station = data().deepCopy(fields()[0].schema(),
                        other.station);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.timestamp)) {
                this.timestamp = data().deepCopy(fields()[1].schema(),
                        other.timestamp);
                fieldSetFlags()[1] = true;
            }
        }

        /** Creates a Builder by copying an existing SecondarySortKey instance */
        private Builder(jesg.avro.SecondarySortKey other) {
            super(jesg.avro.SecondarySortKey.SCHEMA$);
            if (isValidValue(fields()[0], other.station)) {
                this.station = data().deepCopy(fields()[0].schema(),
                        other.station);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.timestamp)) {
                this.timestamp = data().deepCopy(fields()[1].schema(),
                        other.timestamp);
                fieldSetFlags()[1] = true;
            }
        }

        /** Gets the value of the 'station' field */
        public java.lang.Long getStation() {
            return station;
        }

        /** Sets the value of the 'station' field */
        public jesg.avro.SecondarySortKey.Builder setStation(long value) {
            validate(fields()[0], value);
            this.station = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'station' field has been set */
        public boolean hasStation() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'station' field */
        public jesg.avro.SecondarySortKey.Builder clearStation() {
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'timestamp' field */
        public java.lang.Long getTimestamp() {
            return timestamp;
        }

        /** Sets the value of the 'timestamp' field */
        public jesg.avro.SecondarySortKey.Builder setTimestamp(long value) {
            validate(fields()[1], value);
            this.timestamp = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'timestamp' field has been set */
        public boolean hasTimestamp() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'timestamp' field */
        public jesg.avro.SecondarySortKey.Builder clearTimestamp() {
            fieldSetFlags()[1] = false;
            return this;
        }

        @Override
        public SecondarySortKey build() {
            try {
                SecondarySortKey record = new SecondarySortKey();
                record.station = fieldSetFlags()[0] ? this.station
                        : (java.lang.Long) defaultValue(fields()[0]);
                record.timestamp = fieldSetFlags()[1] ? this.timestamp
                        : (java.lang.Long) defaultValue(fields()[1]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
